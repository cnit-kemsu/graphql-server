[{
 "time": "2019-4-14 13:52:17",
 "caused": {
  "PiblicError": {
   "message": "Expected public error",
   "clientInfo": "Do nothing",
   "stack": [
    "app.use (test/server/App.js:26:11)",
    "next (src/userInfo.js:17:7)"
   ],
   "rootCause": {
    "Error": {
     "message": "Expected error",
     "stack": [
      "app.use (test/server/App.js:24:11)",
      "next (src/userInfo.js:17:7)"
     ]
    }
   }
  }
 }
}, {
 "time": "2019-4-14 13:52:17",
 "caused": {
  "PiblicError": {
   "message": "Expected public error",
   "clientInfo": "Do nothing",
   "stack": [
    "app.use (test/server/App.js:26:11)",
    "next (src/userInfo.js:17:7)"
   ],
   "rootCause": {
    "Error": {
     "message": "Expected error",
     "stack": [
      "app.use (test/server/App.js:24:11)",
      "next (src/userInfo.js:17:7)"
     ]
    }
   }
  }
 }
}, {
 "time": "2019-4-14 13:53:17",
 "caused": {
  "PiblicError": {
   "message": "Expected public error",
   "clientInfo": "Do nothing",
   "stack": [
    "app.use (test/server/App.js:26:11)",
    "next (src/userInfo.js:17:7)"
   ],
   "rootCause": {
    "Error": {
     "message": "Expected error",
     "stack": [
      "app.use (test/server/App.js:24:11)",
      "next (src/userInfo.js:17:7)"
     ]
    }
   }
  }
 }
}, {
 "time": "2019-4-14 15:25:17",
 "caused": {
  "TypeError": {
   "message": "Cannot read property 'PublicInfo' of undefined",
   "stack": [
    "PublicInfo (src/graphql/formatError.js:13:12)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:26:17",
 "caused": {
  "Error": {
   "message": "Not authorized",
   "stack": [
    "Error (src/authorize.js:2:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:27:14",
 "caused": {
  "PublicError": {
   "message": "Not authorized",
   "clientInfo": null,
   "stack": [
    "authorize (src/authorize.js:4:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:27:49",
 "caused": {
  "PublicError": {
   "message": "Not authorized",
   "stack": [
    "authorize (src/authorize.js:4:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:28:06",
 "caused": {
  "PublicError": {
   "message": "Not authorized",
   "stack": [
    "authorize (src/authorize.js:4:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:29:19",
 "caused": {
  "PublicError": {
   "message": "Not authorized",
   "stack": [
    "authorize (src/authorize.js:4:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:32:00",
 "caused": {
  "PublicError": {
   "message": "Not authorized",
   "stack": [
    "authorize (src/authorize.js:4:33)",
    "resolve (test/server\\graphql/users.js:55:5)"
   ]
  }
 }
}, {
 "time": "2019-4-14 15:32:10",
 "caused": {
  "PublicError": {
   "message": "Expected public error",
   "clientInfo": "Do nothing",
   "stack": [
    "app.use (test/server/App.js:26:11)",
    "next (src/userInfo.js:17:7)"
   ],
   "rootCause": {
    "Error": {
     "message": "Expected error",
     "stack": [
      "app.use (test/server/App.js:24:11)",
      "next (src/userInfo.js:17:7)"
     ]
    }
   }
  }
 }
}, {
 "time": "2019-4-14 15:32:33",
 "caused": {
  "PublicError": {
   "message": "No such role",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server\\graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=15765, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 20:57:16",
 "cause": {
  "PublicError": {
   "message": "Expected public error",
   "clientInfo": "Do nothing",
   "stack": [
    "app.use (test/server/App.js:26:11)",
    "next (src/userInfo.js:17:7)"
   ],
   "rootCause": {
    "Error": {
     "message": "Expected error",
     "stack": [
      "app.use (test/server/App.js:24:11)",
      "next (src/userInfo.js:17:7)"
     ]
    }
   }
  }
 }
}, {
 "time": "2019-4-14 20:57:21",
 "cause": {
  "PublicError": {
   "message": "No such role",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16096, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 20:57:36",
 "cause": {
  "Error": {
   "message": "Expected error",
   "stack": [
    "app.use (test/server/App.js:21:9)",
    "next (src/userInfo.js:17:7)"
   ]
  }
 }
}, {
 "time": "2019-4-14 20:57:44",
 "cause": {
  "PublicError": {
   "message": "No such role",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16113, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 20:58:01",
 "cause": {
  "PublicError": {
   "message": "No such role",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16113, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,1]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 20:58:59",
 "cause": {
  "Error": {
   "message": "(conn=16116, no: 1062, SQLState: 23000) Duplicate entry 'Admin' for key 'name'\nsql: INSERT INTO roles SET name = ? - parameters:['Admin']",
   "stack": [],
   "fatal": false,
   "errno": 1062,
   "sqlState": "23000",
   "code": "ER_DUP_ENTRY"
  }
 }
}, {
 "time": "2019-4-14 20:59:14",
 "cause": {
  "PublicError": {
   "message": "No such role",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16117, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 21:00:52",
 "cause": {
  "PublicError": {
   "message": "User doesn't exist",
   "clientInfo": "Unmet constraints",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:26:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16124, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "2019-4-14 21:01:30",
 "cause": {
  "PublicError": {
   "message": "User doesn't exist",
   "clientInfo": "Unmet constraint",
   "stack": [
    "resolve (test/server/graphql/userRoles.js:23:58)"
   ],
   "rootCause": {
    "Error": {
     "message": "(conn=16144, no: 1452, SQLState: 23000) Cannot add or update a child row: a foreign key constraint fails (`test_db`.`user_roles`, CONSTRAINT `user_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE)\nsql: INSERT INTO user_roles SET user_id = ?, role_id = ? - parameters:[1,2]",
     "stack": [],
     "fatal": false,
     "errno": 1452,
     "sqlState": "23000",
     "code": "ER_NO_REFERENCED_ROW_2"
    }
   }
  }
 }
}, {
 "time": "4/15/2019, 2:11:51 PM",
 "cause": {
  "PublicError": {
   "message": "Database connection failed",
   "clientInfo": "TECHNICAL_ISSUE",
   "stack": [
    "Pool.getConnection (src/database.js:49:13)"
   ],
   "name": "PublicError",
   "rootCause": {
    "name": "SqlError",
    "message": "Access denied for user 'root'@'localhost' (using password: YES)",
    "stack": [
     "Pool.getConnection (src/database.js:50:51)"
    ]
   }
  }
 }
}, {
 "time": "4/15/2019, 2:11:51 PM",
 "cause": {
  "PublicError": {
   "message": "Database connection failed",
   "clientInfo": "TECHNICAL_ISSUE",
   "stack": [
    "Pool.getConnection (src/database.js:49:13)"
   ],
   "name": "PublicError",
   "rootCause": {
    "name": "SqlError",
    "message": "Access denied for user 'root'@'localhost' (using password: YES)",
    "stack": [
     "Pool.getConnection (src/database.js:50:51)"
    ]
   }
  }
 }
}, {
 "time": "4/15/2019, 4:56:28 PM",
 "cause": {
  "name": "Error",
  "message": "Expected error",
  "stack": [
   "app.use (test/server/App.js:35:9)",
   "next (src/auth/userInfo.js:17:7)"
  ]
 }
}, {
 "time": "4/15/2019, 4:56:34 PM",
 "cause": {
  "name": "Error",
  "message": "Expected error",
  "stack": [
   "app.use (test/server/App.js:35:9)",
   "next (src/auth/userInfo.js:17:7)"
  ]
 }
}, {
 "time": "4/15/2019, 4:57:02 PM",
 "cause": {
  "message": "Expected public error",
  "clientInfo": "Do nothing",
  "stack": [
   "app.use (test/server/App.js:40:11)",
   "next (src/auth/userInfo.js:17:7)"
  ],
  "rootCause": {
   "name": "Error",
   "message": "Expected error"
  }
 }
}, {
 "time": "4/15/2019, 4:57:45 PM",
 "cause": {
  "message": "Querying database failed",
  "clientInfo": "UNEXPECTED_EXCEPTION",
  "stack": [
   "Connection.query (src/database/Connection.js:17:13)"
  ],
  "rootCause": {
   "name": "SqlError",
   "message": "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT1 id, username FROM users  LIMIT 10 OFFSET 0' at line 1",
   "code": "ER_PARSE_ERROR",
   "sql": "SELECT1 id, username FROM users  LIMIT ? OFFSET ?",
   "params": [
    10,
    0
   ]
  }
 }
}, {
 "time": "4/15/2019, 4:58:18 PM",
 "cause": {
  "message": "Expected public error",
  "clientInfo": "Do nothing",
  "stack": [
   "app.use (test/server/App.js:40:11)",
   "next (src/auth/userInfo.js:17:7)"
  ],
  "rootCause": {
   "name": "Error",
   "message": "Expected error"
  }
 }
}, {
 "time": "4/16/2019, 9:20:59 AM",
 "cause": {
  "message": "Querying database failed",
  "clientInfo": "UNEXPECTED_EXCEPTION",
  "stack": [
   "Connection.query (src/database/Connection.js:17:13)"
  ],
  "rootCause": {
   "name": "SqlError",
   "message": "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT1 id, username FROM users  LIMIT 1 OFFSET 0' at line 1",
   "code": "ER_PARSE_ERROR",
   "sql": "SELECT1 id, username FROM users  LIMIT ? OFFSET ?",
   "params": [
    1,
    0
   ]
  }
 }
}, {
 "time": "4/16/2019, 9:21:27 AM",
 "cause": {
  "message": "Querying database failed",
  "clientInfo": "UNEXPECTED_EXCEPTION",
  "stack": [
   "Connection.query (src/database/Connection.js:17:13)"
  ],
  "rootCause": {
   "name": "SqlError",
   "message": "You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'SELECT1 id, username FROM users  LIMIT 10 OFFSET 0' at line 1",
   "code": "ER_PARSE_ERROR",
   "sql": "SELECT1 id, username FROM users  LIMIT ? OFFSET ?",
   "params": [
    10,
    0
   ]
  }
 }
}]